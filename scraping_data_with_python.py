# -*- coding: utf-8 -*-
"""Scraping data with python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-cpB7H33IKeghAdwFQ-Qr6Uoox8oKjP4

**SCRAPING DATA WITH PYTHON**

 After doing several reserch on how to scrap data from websites, I came up with  <a href = "https://realpython.com/beautiful-soup-web-scraper-python" > beautifulSoup.
"""

import requests
import csv
from bs4 import BeautifulSoup

"""This function takes in the website url link and the url is parsed into the function."""

def scrape_data(url):
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        data_rows = soup.findAll('tr')
        data_list = []
        for row in data_rows:
            columns = row.findAll('td')
            if len(columns) >= 3:
                # Assuming you want to extract the first 3 columns from each row
                data_list.append([col.text.strip() for col in columns[:3]])
        return data_list
    else:
        print("Failed to retrieve data. Status Code:", response.status_code)
        return []

def save_to_csv(data_list, filename):
    with open(filename, 'w', newline='') as csvfile:
        csvwriter = csv.writer(csvfile)
        csvwriter.writerow(['Column1', 'Column2', 'Column3'])  # Replace with your column headers
        csvwriter.writerows(data_list)

if __name__ == "__main__":
    # Replace 'URL_HERE' with the actual URL of the tcktcktck website you want to scrape

    url = 'URL'

    data_list = scrape6_data(url)
    if data_list:
        # Replace 'output.csv' with your desired CSV filename
        save_to_csv(data_list, 'FILE.csv')
        print("Data successfully scraped and saved to 'FILE.csv'.")
    else:
        print("No data to save.")

"""**To download the `FILE.csv` file to your computer after running the Python script, you can follow these steps:**

1. After running the Python script, the `FILE.csv` file will be created in the same directory where the script is located.
2. Locate the Python script on your computer.
3. You can click on the file to open and view its contents using a text editor like Notepad or a spreadsheet program like Microsoft Excel.
4. To download the `FILE.csv` file to your computer, follow these steps based on your operating system:

**For Windows:**
- Open File Explorer.
- Navigate to the directory where the Python script is located.
- Look for the `FILE.csv` file in the folder.
- Right-click on the file and select "Copy."
- Go to the folder or location on your computer where you want to save the `FILE.csv` file.
- Right-click in the folder and select "Paste" to save a copy of the `FILE.csv` file.


**For macOS:**
- Open Finder.
- Navigate to the directory where the Python script is located.
- Look for the `FILE.csv` file in the folder.
- Right-click (or Ctrl-click) on the file and select "Copy."
- Go to the folder or location on your computer where you want to save the `FILE.csv` file.
- Right-click (or Ctrl-click) in the folder and select "Paste" to save a copy of the `FILE.csv` file.

**For Linux:**
- Open your file manager.
- Navigate to the directory where the Python script is located.
- Look for the `FILE.csv` file in the folder.
- Right-click on the file and select "Copy."
- Go to the folder or location on your computer where you want to save the `FILE.csv` file.
- Right-click in the folder and select "Paste" to save a copy of the `FILE.csv` file.

After following these steps, you should have successfully downloaded the `FILE.csv` file from the website to your computer. You can then open the file using a spreadsheet program like Microsoft Excel or Google Sheets to view and analyze the data.

Please note that the file will be named `FILE.csv`, as specified in the Python script. If you want to change the filename, you can modify the `save_to_csv` function in the Python script and re-run it.
"""